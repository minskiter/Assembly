Microsoft (R) Macro Assembler Version 6.15.8803		    08/03/20 12:27:36
sort							     Page 1 - 1


				TITLE sort
				include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data
				  ; array dd 100 dup(0)
				  ; n dd ?
 00000000 0000000A		  array dd 10,5,6,7,-1,10
	   00000005
	   00000006
	   00000007
	   FFFFFFFF
	   0000000A
 00000018 00000006		  n dd ($-array)/4
 00000000			.code
 00000000			main proc
				  ; call readint
				  ; mov n,eax
				  ; mov ecx,eax
				  ; lea edx,array
				  ; call readArray
 00000000  8D 15 00000000 R	  lea edx,array
 00000006  8B 0D 00000018 R	  mov ecx,n

 0000000C  52			  push edx
 0000000D  C1 E1 02		  shl ecx,2
 00000010  03 CA		  add ecx,edx
 00000012  83 E9 04		  sub ecx,4
 00000015  51			  push ecx
				  
 00000016  E8 0000001B		  call sort
				  

 0000001B  83 C4 08		  add esp,8

 0000001E  8D 15 00000000 R	  lea edx,array
 00000024  8B 0D 00000018 R	  mov ecx,n
 0000002A  E8 00000090		  call print
 0000002F			final:
				  exit
 00000036			main endp

				; quickSort;l=>stack[0],r=>stack[1]
 00000036			sort proc

 00000036  55			  push ebp
 00000037  8B EC		  mov ebp,esp
 00000039  83 C5 04		  add ebp,4
 0000003C  60			  pushad
 0000003D  8B 75 08		  mov esi,[ebp+8]
 00000040  8B 7D 04		  mov edi,[ebp+4]
 00000043  3B F7		  cmp esi,edi ;esi>=edi?goto final
 00000045  7D 62		  jge final
				  
 00000047  8B DF		  mov ebx,edi ; ebx = (esi+edi)>>1
 00000049  2B DE		  sub ebx,esi
 0000004B  C1 EB 03		  shr ebx,3
 0000004E  C1 E3 02		  shl ebx,2
 00000051  03 DE		  add ebx,esi
				  ; 
				  ; shr ebx,1  ; ebx = (esi+edi)>>1
 00000053  8B 03		  mov eax,[ebx] ; get middle number
				 
 00000055			again:

				;   pushad
				;   lea edx,array
				;   mov ecx,n
				;   call print
				;   popad

 00000055			right: ; while (a[i]<mid) ++i
 00000055  3B 75 04		  cmp esi,[ebp+4]
 00000058  7D 09		  jge left
 0000005A  39 06		  cmp [esi],eax
 0000005C  7D 05		  jge left
 0000005E  83 C6 04		  add esi,4
 00000061  EB F2		  jmp right

 00000063			left: ; while (a[j]>mid) --j
				 
 00000063  3B 7D 08		  cmp edi,[ebp+8]
 00000066  7E 09		  jle assign
 00000068  39 07		  cmp [edi],eax
 0000006A  7E 05		  jle assign
 0000006C  83 EF 04		  sub edi,4
 0000006F  EB F2		  jmp left

 00000071			assign: ; if (i<=j) swap(i++,j--);
				  ; push eax
				  ; ; mov eax,[esi]
				  ; call writeint
				  ; call crlf
				  ; pop eax

 00000071  3B F7		  cmp esi,edi
 00000073  7F 0E		  jg next

 00000075  FF 37		  push [edi]
 00000077  FF 36		  push [esi]
 00000079  8F 07		  pop [edi]
 0000007B  8F 06		  pop [esi]
 0000007D  83 C6 04		  add esi,4
 00000080  83 EF 04		  sub edi,4

				  

 00000083			next:


				  ; #region [debug infomation]
				  ; push edx
				  ; push ecx
				  ; lea edx,array
				  ; mov ecx,n
				  ; call print
				  ; pop ecx
				  ; pop edx
				  ; #endregion

				  

 00000083  3B F7		  cmp esi,edi
 00000085  7E CE		  jle again

				  

 00000087  39 7D 08		  cmp [ebp+8],edi
 0000008A  7D 0C		  jge nextRight

 0000008C  FF 75 08		  push [ebp+8]
				  ; sub edi,4
 0000008F  57			  push edi

				   
 00000090  E8 FFFFFFA1		  call sort
 00000095  83 C4 08		  add esp,8
				 
				 
				  

 00000098			nextRight:

 00000098  3B 75 04		  cmp esi,[ebp+4]
 0000009B  7D 0C		  jge final
				  ; add esi,4
 0000009D  56			  push esi
 0000009E  FF 75 04		  push [ebp+4]
 000000A1  E8 FFFFFF90		  call sort
 000000A6  83 C4 08		  add esp,8

 000000A9			final: 
 000000A9  61			  popad
 000000AA  5D			  pop ebp
 000000AB  C3			  ret
 000000AC			sort endp

				; input array;array=>edx,ecx
 000000AC			readArray  proc
 000000AC  60			  pushad
 000000AD  8B D9		  mov ebx,ecx
 000000AF			again:
 000000AF  E8 00000000 E	  call readint
 000000B4  53			  push ebx
 000000B5  2B D9		  sub ebx,ecx
 000000B7  89 04 9A		  mov [edx+ebx*4],eax
 000000BA  5B			  pop ebx
 000000BB  E2 F2		  loop again
 000000BD			final:
 000000BD  61			  popad
 000000BE  C3			  ret
 000000BF			readArray endp

				; print edx[ecx]
 000000BF			print proc
 000000BF  60			  pushad
 000000C0  8B F1		  mov esi,ecx
 000000C2			again:
 000000C2  57			  push edi
 000000C3  8B FE		  mov edi,esi
 000000C5  2B F9		  sub edi,ecx
 000000C7  8B 04 BA		  mov eax,dword ptr [edx+edi*4]
 000000CA  5F			  pop edi
 000000CB  E8 00000000 E	  call writeint
 000000D0  B0 20		  mov al,' '
 000000D2  E8 00000000 E	  call writechar
 000000D7  EB 00		  jmp next
 000000D9			next:
 000000D9  83 E9 01		  sub ecx,1
 000000DC  83 F9 00		  cmp ecx,0
 000000DF  74 02		  jz final
 000000E1  EB DF		  jmp again
 000000E3			final:
 000000E3  E8 00000000 E	  call crlf
 000000E8  61			  popad
 000000E9  C3			  ret
 000000EA			print endp

				end main
Microsoft (R) Macro Assembler Version 6.15.8803		    08/03/20 12:27:36
sort							     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000005
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 Byte
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000001C DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000EA DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClrScr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000036 Public STDCALL
  final  . . . . . . . . . . . .	L Near	 0000002F _TEXT	
print  . . . . . . . . . . . . .	P Near	 000000BF _TEXT	Length= 0000002B Public STDCALL
  again  . . . . . . . . . . . .	L Near	 000000C2 _TEXT	
  next . . . . . . . . . . . . .	L Near	 000000D9 _TEXT	
  final  . . . . . . . . . . . .	L Near	 000000E3 _TEXT	
readArray  . . . . . . . . . . .	P Near	 000000AC _TEXT	Length= 00000013 Public STDCALL
  again  . . . . . . . . . . . .	L Near	 000000AF _TEXT	
  final  . . . . . . . . . . . .	L Near	 000000BD _TEXT	
sort . . . . . . . . . . . . . .	P Near	 00000036 _TEXT	Length= 00000076 Public STDCALL
  again  . . . . . . . . . . . .	L Near	 00000055 _TEXT	
  right  . . . . . . . . . . . .	L Near	 00000055 _TEXT	
  left . . . . . . . . . . . . .	L Near	 00000063 _TEXT	
  assign . . . . . . . . . . . .	L Near	 00000071 _TEXT	
  next . . . . . . . . . . . . .	L Near	 00000083 _TEXT	
  nextRight  . . . . . . . . . .	L Near	 00000098 _TEXT	
  final  . . . . . . . . . . . .	L Near	 000000A9 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
array  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
n  . . . . . . . . . . . . . . .	DWord	 00000018 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
