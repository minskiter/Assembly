Microsoft (R) Macro Assembler Version 6.15.8803		    03/30/20 20:40:47
maze							     Page 1 - 1


				; 2020/3/30 UTF-8
				TITLE maze
				include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C .NOLIST
			      C .LIST
			      C 
 00000000			.data
				  ; 初始化迷宫
 00000000 01 01 01 01 01	    map db 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1,1
	   01 01 01 01 01
	   01 01 01 01 01
	   01
 00000010  01 02 00 00 00	        db 1,2,0,0,0, 0,1,0,0,0, 1,0,0,0,1,1
	   00 01 00 00 00
	   01 00 00 00 01
	   01
 00000020  01 01 01 01 01	        db 1,1,1,1,1, 0,1,1,1,0, 1,0,1,0,1,1
	   00 01 01 01 00
	   01 00 01 00 01
	   01
 00000030  01 00 00 00 01	        db 1,0,0,0,1, 0,0,0,1,0, 0,0,1,0,1,1
	   00 00 00 01 00
	   00 00 01 00 01
	   01
 00000040  01 00 01 01 01	        db 1,0,1,1,1, 0,1,1,1,1, 1,0,1,1,1,1
	   00 01 01 01 01
	   01 00 01 01 01
	   01
 00000050  01 00 00 00 01	        db 1,0,0,0,1, 0,0,0,0,0, 0,0,0,0,1,1
	   00 00 00 00 00
	   00 00 00 00 01
	   01
 00000060  01 01 01 00 01	        db 1,1,1,0,1, 1,1,1,1,1, 1,0,1,0,1,1
	   01 01 01 01 01
	   01 00 01 00 01
	   01
 00000070  01 00 00 00 00	        db 1,0,0,0,0, 0,0,0,1,0, 0,0,1,0,1,1
	   00 00 00 01 00
	   00 00 01 00 01
	   01
 00000080  01 01 01 00 01	        db 1,1,1,0,1, 1,1,0,1,1, 1,0,1,0,1,1
	   01 01 00 01 01
	   01 00 01 00 01
	   01
 00000090  01 00 01 00 00	        db 1,0,1,0,0, 0,1,0,0,0, 0,0,1,0,1,1
	   00 01 00 00 00
	   00 00 01 00 01
	   01
 000000A0  01 00 01 00 01	        db 1,0,1,0,1, 0,1,1,1,1, 1,1,1,0,1,1
	   00 01 01 01 01
	   01 01 01 00 01
	   01
 000000B0  01 00 00 00 01	        db 1,0,0,0,1, 0,1,0,1,0, 0,0,0,0,1,1
	   00 01 00 01 00
	   00 00 00 00 01
	   01
 000000C0  01 00 01 00 01	        db 1,0,1,0,1, 0,1,0,1,0, 1,0,1,1,1,1
	   00 01 00 01 00
	   01 00 01 01 01
	   01
 000000D0  01 00 01 00 01	        db 1,0,1,0,1, 0,0,0,0,0, 1,0,0,3,1,1
	   00 00 00 00 00
	   01 00 00 03 01
	   01
 000000E0  01 01 01 01 01	        db 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1,1
	   01 01 01 01 01
	   01 01 01 01 01
	   01
 000000F0  01 01 01 01 01	        db 1,1,1,1,1, 1,1,1,1,1, 1,1,1,1,1,1
	   01 01 01 01 01
	   01 01 01 01 01
	   01
 00000100  00000200 [		    ans dd 16*16*2 dup(0) ;位置坐标数组
	    00000000
	   ]
 00000900  00000100 [		    visited db 16*16 dup(0)
	    00
	   ]
 00000A00 00000001		    dir dd 1,0,0,1,-1,0,0,-1 ; 方向数组
	   00000000
	   00000000
	   00000001
	   FFFFFFFF
	   00000000
	   00000000
	   FFFFFFFF
 00000A20 00000100		    num dd 256 ;总大小
 00000A24 00000010		    w dd 16;
 00000A28 00000010		    h dd 16;
 00000000			.code
 00000000			main proc
 00000000  8D 15 00000000 R	  lea edx,map
 00000006  8D 3D 00000100 R	  lea edi,ans
 0000000C  8B 0D 00000A20 R	  mov ecx,num
 00000012  FF 35 00000A28 R	  push h
 00000018  FF 35 00000A24 R	  push w
 0000001E  E8 00000028		  call findBegin
 00000023  8D 35 00000900 R	  lea esi,visited
 00000029  68 00000100 R	  push offset ans
 0000002E  FF 35 00000A28 R	  push h
 00000034  FF 35 00000A24 R	  push w
 0000003A  68 00000A00 R	  push offset dir
 0000003F  E8 00000033		  call dfs
 00000044			final:
				  exit
 0000004B			main endp

 0000004B			findBegin proc
 0000004B  55			  push ebp
 0000004C  8B EC		  mov ebp,esp
 0000004E  83 C5 08		  add ebp,8
 00000051  60			  pushad
 00000052  B8 00000000		  mov eax,0
 00000057			again:
 00000057  8A 04 11		  mov al,[edx+ecx]
 0000005A  3C 02		  cmp al,2
 0000005C  74 02		  je final
 0000005E  E2 F7		  loop again
 00000060			final:
 00000060  BA 00000000		  mov edx,0
 00000065  8B C1		  mov eax,ecx
 00000067  F7 75 00		  div dword ptr[ebp]
 0000006A  89 07		  mov [edi],eax
 0000006C  89 57 04		  mov [edi+4],edx
 0000006F  61			  popad
 00000070  83 C7 08		  add edi,8
 00000073  5D			  pop ebp
 00000074  C2 0008		  ret 8
 00000077			findBegin endp


 00000077			dfs proc
 00000077  55			  push ebp
 00000078  8B EC		  mov ebp,esp
 0000007A  83 C5 08		  add ebp,8
 0000007D  60			  pushad

 0000007E  52			  push edx
 0000007F  8B 47 F8		  mov eax,[edi-8]
 00000082  F7 65 04		  mul dword ptr[ebp+4]
 00000085  5A			  pop edx
 00000086  03 47 FC		  add eax,[edi-4]


 00000089  B9 00000004		  mov ecx,4
 0000008E  8B 47 F8		  mov eax,[edi-8]
 00000091  8B 5F FC		  mov ebx,[edi-4]

				  
				 

 00000094			again:
				  ; eax=>x;ebx=>y
 00000094  50			  push eax
 00000095  53			  push ebx

 00000096  52			  push edx
 00000097  8B 55 00		  mov edx,[ebp]
 0000009A  03 44 CA F8		  add eax,[edx+ecx*8-8]
 0000009E  03 5C CA FC		  add ebx,[edx+ecx*8-4]
 000000A2  5A			  pop edx

				  
 000000A3  83 F8 00		  cmp eax,0
 000000A6  7C 67		  jl final
 000000A8  83 FB 00		  cmp ebx,0
 000000AB  7C 62		  jl final
 000000AD  3B 45 04		  cmp eax,[ebp+4]
 000000B0  7D 5D		  jge final
 000000B2  3B 5D 08		  cmp ebx,[ebp+8]
 000000B5  7D 58		  jge final

 000000B7  89 07		  mov [edi],eax
 000000B9  89 5F 04		  mov [edi+4],ebx
 000000BC  83 C7 08		  add edi,8

 000000BF  52			  push edx
 000000C0  F7 65 04		  mul dword ptr[ebp+4]
 000000C3  5A			  pop edx
 000000C4  03 C3		  add eax,ebx

 000000C6  8A 1C 30		  mov bl,[esi+eax]
 000000C9  80 FB 01		  cmp bl,1
 000000CC  74 28		  je backTrace

 000000CE  8A 1C 10		  mov bl,[edx+eax]
 000000D1  80 FB 01		  cmp bl,1
 000000D4  74 20		  je backTrace

 000000D6  80 FB 03		  cmp bl,3
 000000D9  74 24		  je output


				  ;设置为走过
 000000DB  B3 01		  mov bl,1
 000000DD  88 1C 30		  mov [esi+eax],bl 

 000000E0  FF 75 0C		  push [ebp+12]
 000000E3  FF 75 08		  push [ebp+8]
 000000E6  FF 75 04		  push [ebp+4]
 000000E9  FF 75 00		  push [ebp]

 000000EC  E8 FFFFFF86		  call dfs
				  ;回溯
				  
 000000F1  B3 00		  mov bl,0
 000000F3  88 1C 30		  mov [esi+eax],bl
 000000F6			backTrace:
 000000F6  83 EF 08		  sub edi,8 
 000000F9			next:
 000000F9  5B			  pop ebx
 000000FA  58			  pop eax
 000000FB  E2 97		  loop again
 000000FD  EB 10		  jmp final
 000000FF			output:
 000000FF  FF 75 0C		  push [ebp+12]
 00000102  57			  push edi
 00000103  E8 0000000C		  call print
				  exit
 0000010F			final:
 0000010F  61			  popad
 00000110  5D			  pop ebp
 00000111  C2 0010		  ret 16
 00000114			dfs endp

 00000114			print proc
 00000114  55			  push ebp
 00000115  8B EC		  mov ebp,esp
 00000117  83 C5 08		  add ebp,8
 0000011A  60			  pushad
 0000011B  8B 4D 00		  mov ecx,[ebp]
 0000011E  2B 4D 04		  sub ecx,[ebp+4]
 00000121  C1 E9 03		  shr ecx,3
 00000124  8B 55 04		  mov edx,[ebp+4]
 00000127			again:
 00000127  B0 28		  mov al,'('
 00000129  E8 00000000 E	  call writechar
 0000012E  8B 02		  mov eax,[edx]
 00000130  E8 00000000 E	  call writedec
 00000135  B0 2C		  mov al,','
 00000137  E8 00000000 E	  call writechar
 0000013C  8B 42 04		  mov eax,[edx+4]
 0000013F  E8 00000000 E	  call writedec
 00000144  B0 29		  mov al,')'
 00000146  E8 00000000 E	  call writechar
 0000014B  83 F9 01		  cmp ecx,1
 0000014E  74 13		  je final
 00000150  B0 2D		  mov al,'-'
 00000152  E8 00000000 E	  call writechar
 00000157  B0 3E		  mov al,'>'
 00000159  E8 00000000 E	  call writechar
 0000015E  83 C2 08		  add edx,8
 00000161  E2 C4		  loop again
 00000163			final:
 00000163  61			  popad
 00000164  5D			  pop ebp
 00000165  C2 0008		  ret 8
 00000168			print endp

				end main
Microsoft (R) Macro Assembler Version 6.15.8803		    03/30/20 20:40:47
maze							     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000005
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 Byte
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPos  . . . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  maxWinSize . . . . . . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000A2C DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000168 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClrScr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
dfs  . . . . . . . . . . . . . .	P Near	 00000077 _TEXT	Length= 0000009D Public STDCALL
  again  . . . . . . . . . . . .	L Near	 00000094 _TEXT	
  backTrace  . . . . . . . . . .	L Near	 000000F6 _TEXT	
  next . . . . . . . . . . . . .	L Near	 000000F9 _TEXT	
  output . . . . . . . . . . . .	L Near	 000000FF _TEXT	
  final  . . . . . . . . . . . .	L Near	 0000010F _TEXT	
findBegin  . . . . . . . . . . .	P Near	 0000004B _TEXT	Length= 0000002C Public STDCALL
  again  . . . . . . . . . . . .	L Near	 00000057 _TEXT	
  final  . . . . . . . . . . . .	L Near	 00000060 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000004B Public STDCALL
  final  . . . . . . . . . . . .	L Near	 00000044 _TEXT	
print  . . . . . . . . . . . . .	P Near	 00000114 _TEXT	Length= 00000054 Public STDCALL
  again  . . . . . . . . . . . .	L Near	 00000127 _TEXT	
  final  . . . . . . . . . . . .	L Near	 00000163 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
NULL . . . . . . . . . . . . . .	Number	 00000000h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
ans  . . . . . . . . . . . . . .	DWord	 00000100 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
dir  . . . . . . . . . . . . . .	DWord	 00000A00 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
h  . . . . . . . . . . . . . . .	DWord	 00000A28 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
map  . . . . . . . . . . . . . .	Byte	 00000000 _DATA	
num  . . . . . . . . . . . . . .	DWord	 00000A20 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
visited  . . . . . . . . . . . .	Byte	 00000900 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
w  . . . . . . . . . . . . . . .	DWord	 00000A24 _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
